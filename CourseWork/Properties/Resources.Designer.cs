//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CourseWork.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CourseWork.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на #version 330
        ///
        ///uniform int iTime;
        ///uniform vec2 iResolution;
        ///
        ///out vec4 fragColor;
        ///
        ///float sdPlane( vec3 p )
        ///{
        ///	return p.y;
        ///}
        ///
        ///float sdSphere( vec3 p, float s )
        ///{
        ///    return length(p)-s;
        ///}
        ///
        ///float sdBox( vec3 p, vec3 b )
        ///{
        ///    vec3 d = abs(p) - b;
        ///    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));
        ///}
        ///
        ///float sdEllipsoid( in vec3 p, in vec3 r )
        ///{
        ///    return (length( p/r ) - 1.0) * min(min(r.x,r.y),r.z);
        ///}
        ///
        ///float udRoundBox( vec3 p, vec3 b, float r )
        ///{
        ///    return length(max [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string RayMarchBegin {
            get {
                return ResourceManager.GetString("RayMarchBegin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на vec2 castRay( in vec3 ro, in vec3 rd )
        ///{
        ///    float tmin = 1.0;
        ///    float tmax = 20.0;
        ///   
        ///    float t = tmin;
        ///    float m = -1.0;
        ///
        ///    for (int i = 0; i &lt; 64; i++)
        ///    {
        ///	    float precis = 0.0005 * t;
        ///
        ///	    vec2 res = map(ro + rd * t);
        ///        if (res.x &lt; precis || t &gt; tmax) 
        ///			break;
        ///        t += res.x;
        ///	    m = res.y;
        ///    }
        ///
        ///    if (t &gt; tmax) 
        ///		m = -1.0;
        ///    return vec2(t, m);
        ///}
        ///
        ///
        ///float calcSoftshadow( in vec3 ro, in vec3 rd, in float mint, in float tmax )
        ///{
        ///	float res = 1.0; [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string RayMarchMain {
            get {
                return ResourceManager.GetString("RayMarchMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на vec2 map( in vec3 pos )
        ///{
        ///    // in 2-th coord - material
        ///    vec2 res = vec2(sdPlane(pos), 1.0);
        ///
        ///    float c1 = sin(iTime / 3000000.0) * 2;
        ///    float c2 = cos(iTime / 3000000.0) * 2;
        ///    res = opU(res, vec2(0.5 * sdTorus(opTwist(pos - vec3(0.0, 0.45, 0.0), c1, c2),
        ///	               vec2(0.40, 0.1)), abs(c1) * 50));
        ///    return res;
        ///}.
        /// </summary>
        internal static string SimpleOfMap {
            get {
                return ResourceManager.GetString("SimpleOfMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на #version 330
        ///
        ///in vec4 a_Position;
        ///
        ///void main()
        ///{
        ///	gl_Position = a_Position;
        ///}
        ///.
        /// </summary>
        internal static string VertexShader {
            get {
                return ResourceManager.GetString("VertexShader", resourceCulture);
            }
        }
    }
}
